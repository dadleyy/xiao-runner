name: build-and-publish
on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
jobs:
  build-pio:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/beetle-controller
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: "set output: short_sha"
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: "pip: upgrade"
        run: python -m pip install --upgrade pip
      - name: "pip: install pio"
        run: pip install --upgrade platformio
        # - name: "pio: check"
        #   run: pio check
      - name: "pio: run"
        run: pio run -e release
      - name: "ls: platformio -> tools"
        run: ls -lah $HOME/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin
      - name: "ls: platformio -> partitions"
        run: ls -lah $HOME/.platformio/packages/framework-arduinoespressif32/tools/partitions
      - name: "bundle: prepare-dir"
        run: mkdir -p beetle-controller-dist
      - name: "bundle: copy-bin"
        run: cp .pio/build/release/firmware.bin beetle-controller-dist/firmware.bin
      - name: "bundle: copy-map"
        run: cp .pio/build/release/firmware.map beetle-controller-dist/firmware.map
      - name: "bundle: copy-elf"
        run: cp .pio/build/release/firmware.elf beetle-controller-dist/firmware.elf
      - name: "bundle: copy-partitions"
        run: cp .pio/build/release/partitions.bin beetle-controller-dist/partitions.bin
      - name: "bundle: copy-bootloader"
        run: cp $HOME/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_40m.bin beetle-controller-dist/bootloader.bin
      - name: "bundle: copy-apploader"
        run: cp $HOME/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin beetle-controller-dist/apploader.bin

      - name: "bundle: create"
        run: tar cvzf beetle-controller-${{ steps.vars.outputs.sha_short }}.tar.gz beetle-controller-dist

      - uses: actions/upload-artifact@v3
        with:
          name: "beetle-controller-${{ steps.vars.outputs.sha_short }}.tar.gz"
          path: "./src/beetle-controller/beetle-controller-${{ steps.vars.outputs.sha_short }}.tar.gz"
  publish:
    runs-on: ubuntu-latest
    needs: ["build-pio"]
    steps:
      - uses: actions/checkout@v2
      - name: "set output: short_sha"
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - uses: actions/download-artifact@v3
        with:
          name: "beetle-controller-${{ steps.vars.outputs.sha_short }}.tar.gz"
      - name: printall
        run: ls -lah
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "./*.tar.gz"
          generate_release_notes: true
